generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "sqlite"
  url      = env("DATABASE_URL")
}

model Post {
  id        Int      @id @default(autoincrement())
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  title     String
  content   String?
  slug      String   @unique
  published Boolean  @default(false)
}

model User {
  id                       String                     @id @unique
  username                 String?                    @unique
  email                    String?                    @unique
  email_verified           Boolean? // Might have to be int since SQLite doesn't support bool and only int, however I think Prisma can convert this for me
  key                      Key[]
  auth_session             Session[]
  Email_Verification_Token Email_Verification_Token[]
  Password_Reset_Token     Password_Reset_Token[]
}

model Session {
  id             String @id @unique
  user_id        String
  active_expires BigInt
  idle_expires   BigInt
  user           User   @relation(fields: [user_id], references: [id], onDelete: Cascade)

  @@index([user_id])
}

model Key {
  id              String  @id @unique
  hashed_password String?
  user_id         String
  user            User    @relation(fields: [user_id], references: [id], onDelete: Cascade)

  @@index([user_id])
}

model Email_Verification_Token {
  id      String @id
  expires BigInt
  user_id String
  user    User   @relation(fields: [user_id], references: [id], onDelete: Cascade)
}

model Password_Reset_Token {
  id      String @id
  expires BigInt
  user_id String
  user    User   @relation(fields: [user_id], references: [id], onDelete: Cascade)
}
